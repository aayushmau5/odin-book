datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["selectRelationCount"]
}

model User {
  id        String   @id @default(uuid())
  username  String
  email     String   @unique
  password  String
  profile   Profile? @relation("profile")
  createdAt DateTime @default(now())

  @@map("users")
}

model Profile {
  id               String    @id @default(uuid())
  firstname        String
  lastname         String
  display          String
  friends          Profile[] @relation("friends", references: [id])
  friendsRelation  Profile[] @relation("friends", references: [id])
  friendrequest_to Profile[] @relation("friendrequests", references: [id])
  friendrequest_by Profile[] @relation("friendrequests", references: [id])
  posts            Post[]    @relation("author")
  likes            Post[]    @relation("likes")
  comments         Comment[]
  user             User      @relation("profile", fields: [userId], references: [id])
  userId           String

  @@map("profiles")
}

model Post {
  id        String    @id @default(uuid())
  data      String?
  image     String?
  createdAt DateTime  @default(now())
  author    Profile   @relation("author", fields: [authorId], references: [id])
  authorId  String
  likes     Profile[] @relation("likes")
  comments  Comment[]

  @@map("posts")
}

model Comment {
  id        String    @id @default(uuid())
  data      String
  createdAt DateTime  @default(now())
  post      Post      @relation(fields: [postId], references: [id])
  postId    String
  author    Profile   @relation(fields: [authorId], references: [id])
  authorId  String
  inReplyTo Comment[] @relation("nestedComment")
  repliedBy Comment[] @relation("nestedComment")

  @@map("comments")
}
