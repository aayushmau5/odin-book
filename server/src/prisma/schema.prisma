datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id               String    @id @default(uuid())
  username         String
  email            String    @unique
  password         String
  profile          Profile?  @relation("profile")
  friends          Profile[] @relation("friends")
  incoming_friends Profile[] @relation("incoming_friends")
  outgoing_friends Profile[] @relation("outgoing_friends")
  comments         Comment[]
  createdAt        DateTime  @default(now())

  @@map("users")
}

model Profile {
  id               String @id @default(uuid())
  firstname        String
  lastname         String
  display          String
  friends          User[] @relation("friends")
  incoming_friends User[] @relation("incoming_friends")
  outgoing_friends User[] @relation("outgoing_friends")
  posts            Post[]
  user             User   @relation("profile", fields: [userId], references: [id])
  userId           String

  @@map("profiles")
}

model Post {
  id        String    @id @default(uuid())
  data      String?
  image     String?
  createdAt DateTime  @default(now())
  author    Profile   @relation(fields: [authorId], references: [id])
  authorId  String
  likes     Int       @default(0)
  comments  Comment[]

  @@map("posts")
}

model Comment {
  id        String    @id @default(uuid())
  data      String
  createdAt DateTime  @default(now())
  post      Post      @relation(fields: [postId], references: [id])
  postId    String
  author    User      @relation(fields: [authorId], references: [id])
  authorId  String
  inReplyTo Comment[] @relation("nestedComment")
  repliedBy Comment[] @relation("nestedComment")

  @@map("comments")
}
